<!-- Js Bootstrap 5-->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.7/dist/js/bootstrap.bundle.min.js"></script>

<!-- Swiper JS -->
<script src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js"></script>
<script>
    function myPlugin({ swiper, extendParams, on }) {
        extendParams({
            debugger: false,
        });

        on('init', () => {
            if (!swiper.params.debugger) return;
            console.log('init');
        });
        on('click', (swiper, e) => {
            if (!swiper.params.debugger) return;
            console.log('click');
        });
        on('tap', (swiper, e) => {
            if (!swiper.params.debugger) return;
            console.log('tap');
        });
        on('doubleTap', (swiper, e) => {
            if (!swiper.params.debugger) return;
            console.log('doubleTap');
        });
        on('sliderMove', (swiper, e) => {
            if (!swiper.params.debugger) return;
            console.log('sliderMove');
        });
        on('slideChange', () => {
            if (!swiper.params.debugger) return;
            console.log(
                'slideChange',
                swiper.previousIndex,
                '->',
                swiper.activeIndex
            );
        });
        on('slideChangeTransitionStart', () => {
            if (!swiper.params.debugger) return;
            console.log('slideChangeTransitionStart');
        });
        on('slideChangeTransitionEnd', () => {
            if (!swiper.params.debugger) return;
            console.log('slideChangeTransitionEnd');
        });
        on('transitionStart', () => {
            if (!swiper.params.debugger) return;
            console.log('transitionStart');
        });
        on('transitionEnd', () => {
            if (!swiper.params.debugger) return;
            console.log('transitionEnd');
        });
        on('fromEdge', () => {
            if (!swiper.params.debugger) return;
            console.log('fromEdge');
        });
        on('reachBeginning', () => {
            if (!swiper.params.debugger) return;
            console.log('reachBeginning');
        });
        on('reachEnd', () => {
            if (!swiper.params.debugger) return;
            console.log('reachEnd');
        });
    }
</script>
<script>
    // Init Swiper
    var swiper = new Swiper('.swiper', {
        // Install Plugin To Swiper
        modules: [myPlugin],
        pagination: {
            el: '.swiper-pagination',
            clickable: true,
        },
        navigation: {
            nextEl: '.swiper-button-next',
            prevEl: '.swiper-button-prev',
        },
        // Enable debugger
        debugger: true,
    });
</script>

<!-- Custom JS -->
<script>
    let slides = document.querySelectorAll(".fade-element");

    // نمایش متن مرتبط با اسلاید فعال
    function showSlide(index) {
        slides.forEach(slide => slide.classList.remove("visible"));
        slides[index].classList.add("visible");
    }

    // موقع تغییر اسلاید (از طریق Swiper)
    swiper.on('slideChange', function () {
        showSlide(swiper.activeIndex);
    });

    // اولین بار هنگام لود
    showSlide(swiper.activeIndex);
</script>

<!-- Slick Js -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/slick-carousel@1.8.1/slick/slick.min.js"></script>
<script>
    $(document).ready(function () {
      $(".slider-Last-Product").slick({
        infinite: true, // اسلایدر بی‌نهایت
        autoplay: true, // پخش خودکار
        autoplaySpeed: 3000, // سرعت پخش (میلی‌ثانیه)
        speed: 500, // سرعت انتقال اسلاید
        slidesToShow: 3, // تعداد اسلایدهای نمایش‌داده‌شده
        slidesToScroll: 1, // تعداد اسلایدهای جابه‌جا‌شده در هر مرحله
        arrows: true, // فعال کردن دکمه‌های قبلی و بعدی
        dots: false, // غیرفعال کردن نقطه‌ها
        swipe: true, // فعال کردن سوایپ با ماوس/لمس
        swipeToSlide: true, // امکان جابه‌جایی آزادانه با درگ
        touchMove: true, // فعال کردن حرکت با لمس
        draggable: true, // فعال کردن درگ با ماوس
        cssEase: "ease-out", // انیمیشن روان‌تر
        pauseOnHover: false, // ادامه اسلاید حتی در صورت هاور
        responsive: [
          // تنظیمات واکنش‌گرا
          {
            breakpoint: 768,
            settings: {
              slidesToShow: 2,
            },
          },
          {
            breakpoint: 480,
            settings: {
              slidesToShow: 1,
            },
          },
        ],
      });
    });
</script>

@* CountDown Script *@
<script>
    const pad = (n) => n.toString().padStart(2, "0");

    function startCountdown(el) {
      const expire = new Date(el.dataset.expire);

      function update() {
        const diff = expire - new Date();
        if (diff <= 0) {
          return;
        }

        const d = Math.floor(diff / 86400000),
          h = Math.floor((diff / 3600000) % 24),
          m = Math.floor((diff / 60000) % 60),
          s = Math.floor((diff / 1000) % 60);

        if (d > 0) {
          el.innerText = `${d}:${pad(h)}:${pad(m)}:${pad(s)}`;
        } else {
          const totalHours = Math.floor(diff / 3600000); // کل ساعت باقی‌مانده
          el.innerText = `${totalHours}:${pad(m)}:${pad(s)}`;
        }
      }

      update();
      setInterval(update, 1000);
    }

    document.querySelectorAll(".countdownDiscount").forEach(startCountdown);
</script>